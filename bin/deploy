#!/bin/bash
set -e

ADD_MIGRATION_FLAG="false"

# オプションで -m が指定された場合はマイグレーションを実行する
while getopts ":m" opt; do
  case ${opt} in
    m )
      ADD_MIGRATION_FLAG="true"
      ;;
    \? )
      echo "Usage: cmd [-m]"
      ;;
  esac
done

# 環境設定ファイルのコピー
cp services/api/env.template services/api/.env

# Dockerネットワークを作成
docker network ls | grep -wq school_app || docker network create school_app

# PostgreSQLデータベースコンテナを起動
if docker ps -a --format '{{.Names}}' | grep -wq postgres_db; then
    docker start postgres_db || true
else
    docker-compose -f docker-compose.db.yml up -d
fi

# データベースの存在を確認し、なければ作成
docker exec postgres_db psql -U postgres -lqt | cut -d \| -f 1 | grep -qw school_db
if [ $? -eq 1 ]; then
    docker exec postgres_db psql -U postgres -c "CREATE DATABASE school_db;"
fi

# メインのDocker Composeファイルを使ってサービスを起動
docker-compose up -d

# api のコンテナに入って、deploy スクリプトを実行
if [ $ADD_MIGRATION_FLAG = "true" ]; then
    docker-compose exec api bin/deploy -m
else
    docker-compose exec api bin/deploy
fi
